-- ‡πÇ‡∏´‡∏•‡∏î BaconLib
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Chxtoqfee12/Chx-Braintoy/refs/heads/main/lib"))()
local version, changelog = lib:GetInfo()

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á
local window = lib:CreateWindow("Chx Brainrot v"..version)

-- ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ Auto Execute
local HttpService = game:GetService("HttpService")
local filename = "AutoExecSettings.txt"

-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
local AutoExecFuncs = {
    Steal = false,
    FunctionUI = false,
    HopServer = false,
    invisible = false -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
}

if pcall(function() readfile(filename) end) then
    local success, data = pcall(function()
        return HttpService:JSONDecode(readfile(filename))
    end)
    if success and data then
        -- ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏µ invisible ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°
        if data.invisible == nil then data.invisible = false end
        AutoExecFuncs = data
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤
local function SaveSettings()
    writefile(filename, HttpService:JSONEncode(AutoExecFuncs))
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°
local function RunSteal()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/dthzqq/New-Bypassed/refs/heads/main/SAB"))()
end

local function Runinvisible()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Chxtoqfee12/Chx-Braintoy/refs/heads/main/steal%20invisible"))()
end

local function RunFunctionUI()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Chxtoqfee12/Chx-Braintoy/refs/heads/main/src%20function"))()
end

local function RunHopServer()
    getgenv().ALLOWED_PLACE_ID = 109983668079237
    getgenv().RETRY_DELAY = 2
    getgenv().MIN_PLAYERS = 2
    getgenv().MAX_PLAYERS = 7
    getgenv().CHECK_COOLDOWN = 5
    getgenv().SOUND_ID = 91907916191505
    getgenv().MODEL_SEARCH_SETTINGS = {}
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Chxtoqfee12/Chx-Braintoy/refs/heads/main/src%20hop%20server"))()
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
local stealBtn = lib:CreateButton(window, "üõ† Steal", RunSteal)
local invisibleBtn = lib:CreateButton(window, "üëª invisible", Runinvisible)
local funcBtn = lib:CreateButton(window, "‚öô Function UI", RunFunctionUI)
local hopBtn = lib:CreateButton(window, "üåç Hop Server", RunHopServer)

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Toggle ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Auto Execute
local toggleSteal = lib:CreateToggle(window, "Auto Steal", AutoExecFuncs.Steal, function(state)
    AutoExecFuncs.Steal = state
    SaveSettings()
end)

local toggleinvisible = lib:CreateToggle(window, "Auto invisible", AutoExecFuncs.invisible, function(state)
    AutoExecFuncs.invisible = state
    SaveSettings()
end)

local toggleFuncUI = lib:CreateToggle(window, "Auto Function UI", AutoExecFuncs.FunctionUI, function(state)
    AutoExecFuncs.FunctionUI = state
    SaveSettings()
end)

local toggleHop = lib:CreateToggle(window, "Auto Hop Server", AutoExecFuncs.HopServer, function(state)
    AutoExecFuncs.HopServer = state
    SaveSettings()
end)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Auto Execute ‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏î‡πâ‡∏ß‡∏¢ delay
task.spawn(function()
    if AutoExecFuncs.Steal then
        task.spawn(RunSteal)
        task.wait(1)
    end
    if AutoExecFuncs.FunctionUI then
        task.spawn(RunFunctionUI)
        task.wait(1)
    end
    if AutoExecFuncs.invisible then
        task.spawn(Runinvisible)
        task.wait(1)
    end
    if AutoExecFuncs.HopServer then
        task.wait(2)
        task.spawn(RunHopServer)
    end
end)
